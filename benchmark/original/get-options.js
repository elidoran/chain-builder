// Generated by CoffeeScript 1.12.5
var flatten,
  slice = [].slice;

flatten = require('array-flatten');

module.exports = function() {
  var arg1, args, array, element, i, index, len, options;
  args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
  arg1 = args != null ? args[0] : void 0;
  array = Array.isArray(arg1) ? flatten(args) : typeof arg1 === 'function' ? args : Array.isArray(arg1 != null ? arg1.array : void 0) ? arg1.array : [];
  for (index = i = 0, len = array.length; i < len; index = ++i) {
    element = array[index];
    if ('function' !== typeof element) {
      return {
        error: 'Elements must be functions',
        element: element,
        index: index
      };
    }
  }
  options = {
    array: array,
    __validated: true
  };
  if (typeof arg1 === 'object') {
    if ((arg1 != null ? arg1.base : void 0) != null) {
      options.base = arg1.base;
    }
    if ((arg1 != null ? arg1.props : void 0) != null) {
      options.props = arg1.props;
    }
    if ((arg1 != null ? arg1.buildContext : void 0) != null) {
      options.buildContext = arg1.buildContext;
    }
  }
  return options;
};
